name: Extended Tests

on:
  schedule:
    # Run extended tests daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:
    # Allow manual trigger

jobs:
  integration-tests:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install pytest pytest-cov pytest-mock

    - name: Run Advanced Tests
      run: |
        echo "Running advanced feature tests..."
        python run_all_tests.py || echo "⚠️ Some tests require live controller"
      continue-on-error: true

    - name: Test Report Generation
      run: |
        echo "Testing report generation..."
        python -c "from core.html_report_generator import generate_html_report; print('✅ HTML generator can be imported')"

  compatibility-check:
    name: Python Compatibility Check
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: ['3.9', '3.10', '3.11', '3.12']

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Test Core Imports
      run: |
        python -c "from core.advanced_analyzer import ExpertNetworkAnalyzer"
        python -c "from core.switch_analyzer import SwitchAnalyzer"
        python -c "from api.cloudkey_gen2_client import CloudKeyGen2Client"

  performance-check:
    name: Performance Validation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'

    - name: Install dependencies
      run: |
        pip install -r requirements.txt
        pip install memory_profiler line_profiler

    - name: Check Module Load Times
      run: |
        python -c "
import time
start = time.time()
from core.advanced_analyzer import ExpertNetworkAnalyzer
from core.switch_analyzer import SwitchAnalyzer
from core.html_report_generator import generate_html_report
end = time.time()
load_time = end - start
print(f'Module load time: {load_time:.3f}s')
if load_time > 2.0:
    print('⚠️ Module load time is slow')
else:
    print('✅ Module load time is acceptable')
        "

  documentation-check:
    name: Documentation Validation
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Check README exists
      run: |
        test -f README.md && echo "✅ README.md exists" || exit 1

    - name: Check Documentation Files
      run: |
        echo "Checking documentation..."
        find docs -name "*.md" -type f | wc -l
        echo "Documentation files found"

    - name: Validate Markdown Links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        config-file: '.github/workflows/mlc_config.json'
      continue-on-error: true
